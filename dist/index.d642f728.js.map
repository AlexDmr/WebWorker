{"mappings":"eAAsBA,EAAWC,GAC/B,MAAMC,cAAmBC,MAAMF,IAAIG,OACnCC,QAAQC,IAAIL,EAAG,IAAKC,GACpB,MAAMK,EAAO,IAAIC,KAAM,CAACN,GAAM,CAACO,KAAM,2BACrC,OAAOC,IAAIC,gBAAgBJ,qBCE3B,MAAMK,EAAK,IAAIC,aAAcb,EAAW,qBAClCc,EAAK,IAAID,aAAcb,EAAW,qBACxCY,EAAGG,YAAY,IACfD,EAAGC,YAAY,IAEfH,EAAGI,UAAaC,GAAQZ,QAAQC,IAAI,aAAcW,EAAIC,MACtDN,EAAGO,QAAaC,GAAQf,QAAQgB,MAAMD,GACtCN,EAAGE,UAAaC,GAAQZ,QAAQC,IAAI,aAAcW,EAAIC,MACtDJ,EAAGK,QAAaC,GAAQf,QAAQgB,MAAMD,GAGxCE","sources":["utils.ts","index.ts"],"sourcesContent":["export async function loadAsBlob(f: string): Promise<string> {\r\n  const str = await (await fetch(f)).text();\r\n  console.log(f, \":\", str);\r\n  const blob = new Blob( [str], {type: 'application/javascript'} );\r\n  return URL.createObjectURL(blob);\r\n}\r\n","// Import stylesheets\nimport './style.css';\nimport { loadAsBlob } from './utils';\n\n// Write TypeScript code!\nasync function go() {\n  const w1 = new Worker( await loadAsBlob('./fibonnacci1.ts') );\n  const w2 = new Worker( await loadAsBlob('./fibonnacci2.ts') );\n  w1.postMessage(40);\n  w2.postMessage(40);\n\n  w1.onmessage = (msg) => console.log('Worker 1 :', msg.data);\n  w1.onerror   =  err  => console.error(err);\n  w2.onmessage = (msg) => console.log('Worker 2 :', msg.data);\n  w2.onerror   =  err  => console.error(err);\n}\n\ngo();\n"],"names":["$37bdf143f0f0bf9e$export$28f2ce48a2693cb1","f","str","fetch","text","console","log","blob","Blob","type","URL","createObjectURL","w1","Worker","w2","postMessage","onmessage","msg","data","onerror","err","error","$fe37914a1f066cda$var$go"],"version":3,"file":"index.d642f728.js.map"}